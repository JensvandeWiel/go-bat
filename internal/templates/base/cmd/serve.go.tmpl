package cmd

import (
	bat "github.com/JensvandeWiel/go-bat/pkg"
	"github.com/spf13/cobra"
	"github.com/spf13/viper"
	"{{ .PackageName }}/controllers"
	"log/slog"
)

// serveCmd represents the serve command
var serveCmd = &cobra.Command{
	Use:   "serve",
	Short: "A brief description of your command",
	RunE:  Serve,
}

func init() {
	rootCmd.AddCommand(serveCmd)

	// Here you will define your flags and configuration settings.

	// Cobra supports Persistent Flags which will work for this command
	// and all subcommands, e.g.:
	// serveCmd.PersistentFlags().String("foo", "", "A help for foo")

	// Cobra supports local flags which will only run when this command
	// is called directly, e.g.:
	// serveCmd.Flags().BoolP("toggle", "t", false, "Help message for toggle")
}

func Serve(cmd *cobra.Command, args []string) error {
	ll := parseLogLevel(viper.GetString("LEVEL"))
	f := parseOutputType(viper.GetString("CONSOLE_FORMAT"))
	logger := bat.NewLogger(f, &slog.HandlerOptions{Level: ll}, false)

	b, err := bat.NewBat(logger)
	if err != nil {
		return err
	}

	err = b.RegisterControllers(&controllers.MainController{})
	if err != nil {
		return err
	}

	return b.Start(viper.GetString("SERVE_HOST") + ":" + viper.GetString("SERVE_PORT"))
}
