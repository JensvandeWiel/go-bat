package cmd

import (
	"{{ .PackageName }}/database"
	"{{ .PackageName }}/database/migrations"
	"errors"
	"github.com/pressly/goose/v3"
	"github.com/spf13/cobra"
)

// migrateCmd represents the migrate command
var migrateCmd = &cobra.Command{
	Use:   "migrate",
	Short: "Migrates the database",
	Args:  cobra.ExactArgs(1),
	RunE: func(cmd *cobra.Command, args []string) error {
		db, err := database.ConnectDB()
		if err != nil {
			return err
		}

		goose.SetBaseFS(migrations.Migrations)

		if err := goose.SetDialect("postgres"); err != nil {
			return err
		}

		if args[0] == "up" {
			if err := goose.Up(db.DB, "."); err != nil {
				return err
			}
		} else if args[0] == "down" {
			if err := goose.Down(db.DB, "."); err != nil {
				return err
			}
		} else {
			return errors.New("invalid migration direction")
		}

		return nil
	},
}

func init() {
	rootCmd.AddCommand(migrateCmd)

	// Here you will define your flags and configuration settings.

	// Cobra supports Persistent Flags which will work for this command
	// and all subcommands, e.g.:
	// migrateCmd.PersistentFlags().String("foo", "", "A help for foo")

	// Cobra supports local flags which will only run when this command
	// is called directly, e.g.:
	// migrateCmd.Flags().BoolP("toggle", "t", false, "Help message for toggle")
}
